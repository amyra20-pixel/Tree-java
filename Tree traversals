class inorder {
    int item;
    inorder left;
    inorder right;
    public inorder(int key){
        item=key;
        left=right=null;
    }
}
public class tree{
inorder root;
    tree(){
        root=null;
    }
    void Inorder(inorder node){
     if(node==null){
        return;
     }
     Inorder(node.left);
    System.out.print(node.item+"->");
     Inorder(node.right);

    }
    void postorder(inorder node1){
        if(node1==null){
            return;
        }
        postorder(node1.left);
        postorder(node1.right);
        System.out.print(node1.item+"->");
        
    }
    void preorder(inorder node2){
        if(node2==null){
            return;
        }
        System.out.print(node2.item+"->");
        preorder(node2.left);
        preorder(node2.right);
       
    }
    public static void main(String args[]){
        tree t=new tree();
        t.root=new inorder(1);
        t.root.left=new inorder(2);
        t.root.right=new inorder(3);
        t.root.left.left = new inorder(5);
    t.root.left.right = new inorder(6);
    System.out.print("----------inorder----------");
    System.out.println("");
        t.Inorder(t.root);
        System.out.println("");
    System.out.print("----------postorder----------"); 
    System.out.println("");
        t.postorder(t.root);
        System.out.println("");
    System.out.print("----------preorder----------");
    System.out.println("");
        t.preorder(t.root);
    }
}


